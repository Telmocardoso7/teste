@model eBankit.Middleware.Ui.Web.Monitoring.Models.ResetPasswordViewModel
@{
    ViewBag.Title = "eBankit - Omnichannel Service Bus Monitoring";
    Layout = "~/Views/Shared/_Login.cshtml";
}

<!-- begin #page-container -->
<div id="page-container" class="fade in">
    <!-- begin login -->
    <div class="login login-v2 animated fadeIn" style="background-color: #292d2e !important" data-pageload-addclass="animated fadeIn">
        <!-- begin brand -->
        <div class="login-header" style="padding: 0 !important">

            <div class="brand">
                <div class="parent">
                    <div class="img">
                        <img src="~/Content/img/ebankit.png" />
                    </div>
                    <div class="text">
                        eBankit
                        <small>Omnichannel Service Bus Monitoring</small>
                    </div>
                </div>
            </div>
            @*<div class="icon">
                    <i class="fa fa-sign-in"></i>
                </div>*@
        </div>
        <!-- end brand -->
        <div class="login-content">

            @using (Html.BeginForm("ResetPassword", "Account", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
            {
                @Html.AntiForgeryToken()
                <h4 style="color:white;">Reset your password.</h4>
                <hr />
                @Html.ValidationSummary("", new { @class = "text-danger" })
                @Html.HiddenFor(model => model.Code)
                <div class="form-group">
                    @Html.TextBoxFor(m => m.Email, new { @class = "form-control input-lg", @placeholder = "Email" })
                    @Html.ValidationMessageFor(m => m.Email, "", new { @class = "text-danger" })
                </div>
                <div class="form-group">
                    @Html.PasswordFor(m => m.Password, new { @class = "form-control input-lg", @placeholder = "Password" })
                    @Html.ValidationMessageFor(m => m.Password, "", new { @class = "text-danger" })
                </div>
                <div class="form-group">
                    @Html.PasswordFor(m => m.ConfirmPassword, new { @class = "form-control input-lg", @placeholder = "Confirm Password" })
                    @Html.ValidationMessageFor(m => m.ConfirmPassword, "", new { @class = "text-danger" })
                </div>
                <div class="login-buttons">
                    <input type="submit" class="btn btn-success btn-block btn-lg" value="Reset" />
                </div>
            }
        </div>
    </div>
    <!-- end login -->
</div>
<!-- end page container -->