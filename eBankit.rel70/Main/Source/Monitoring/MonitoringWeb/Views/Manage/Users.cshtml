@using eBankit.Middleware.Ui.Web.Monitoring.HtmlHelpers
@using eBankit.Middleware.Ui.Web.Monitoring.Models
@using eBankit.Middleware.Ui.Web.Monitoring.Utils
@model ManageUsersViewModel
<!-- begin #content -->


<div id="content" class="content">
    <!-- begin breadcrumb -->
    @BreadCrumbs.RenderBreadCrumbs(Model.BreadCrumbs)
    <!-- end breadcrumb -->
    <!-- begin page-header -->
    <h1 class="page-header">Users</h1>
    <!-- end page-header -->

    @if (ManagePermissions.CheckPermission(PermissionAction.CreateUser, ViewBag.Role))
    {
        <div class="row">
            <!-- begin col-12 -->
            <div class="col-md-12 btNewUserPosition">
                <button type="button" onclick="PreNewUser();" class="btn btn-sm btn-success" id="btnNewUser" data-dismiss="modal">Create New User</button>
            </div>
            <!-- end col-12 -->
        </div>
    }
    <!-- begin row -->
    <div class="row">
        <!-- begin col-12 -->
        <div class="col-md-12">
            <!-- begin panel -->
            <div class="panel-inverse newStyle">
                <div class="panel-heading">
                    <h4 class="panel-title">Manage Users</h4>
                </div>
                <div class="panel-body table-responsive">
                    <table id="results-table" class="table table-striped table-bordered">
                        <thead>
                            <tr>
                                <th>Id</th>
                                <th>Username</th>                         
                                <th>Role</th>
                                <th id="userAction"></th>
                            </tr>
                        </thead>
                    </table>
                </div>
            </div>
            <!-- end panel -->
        </div>
        <!-- end col-12 -->
    </div>
    <!-- end row -->
</div>
<!-- end #content -->

<input type="hidden" id="hf_userid" />
<div class="modal fade" id="modal-confirmation">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">×</button><h4 class="modal-title">Delete User</h4>
            </div>
            <div class="modal-body">You are about to delete a User. Are you sure of this operation?</div>
            <div class="modal-footer">
                <a href="javascript:;" class="btn btn-sm btn-white" data-dismiss="modal">Close</a>
                <button type="button" onclick="DeleteUser();" class="btn btn-sm btn-danger" data-dismiss="modal">Delete</button>
            </div>
        </div>
    </div>
</div>

<div class="modal" id="modal-edit">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">×</button>
                <h4 class="modal-title">Edit User</h4>
            </div>
            <form id="f_EditUser">
                <div class="modal-body">
                    <div class="row panel-form">
                        <div class="form-horizontal form-bordered col-md-12">
                            <div class="form-group">
                                <label class="col-md-4 control-label">Id</label>
                                <div class="col-md-8">
                                    <input type="text" class="form-control" id="eu_Id" name="Id" readonly />
                                </div>
                            </div>
                            <div class="form-group">
                                <label class="col-md-4 control-label">UserName</label>
                                <div class="col-md-8">
                                    <input class="form-control valid" data-val="true" readonly data-val-length="The username must be less than 256 characters long." data-val-length-max="256" data-val-required="The username field is required." id="eu_UserName" name="UserName" type="text" value="" aria-required="true" aria-invalid="false" aria-describedby="Username-error">
                                    <span class="text-danger field-validation-valid" data-valmsg-for="UserName" data-valmsg-replace="true"></span>
                                </div>
                            </div>                           
                            <div class="form-group">
                                <label class="col-md-4 control-label">Role</label>
                                <div class="col-md-8">
                                    @Dropdown.RenderDropdown(Model.Roles, "UserRole", @Model.Role, null, true)
                                </div>
                            </div>
                        </div>

                    </div>
                </div>
                <div class="modal-footer">
                    <a href="javascript:;" class="btn btn-sm btn-white" data-dismiss="modal">Close</a>
                    <button type="button" onclick="EditUser();" class="btn btn-sm btn-success" id="btnEditUser">Save</button>
                </div>
            </form>
        </div>
    </div>
</div>


<div class="modal" id="modal-new">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" id="btnCrossNewUserClose" class="close" data-dismiss="modal" aria-hidden="true">×</button>
                <h4 class="modal-title">Create New User</h4>
            </div>
            <form id="f_NewUser">
                <div class="modal-body">
                    <div class="row panel-form">
                        <div class="form-horizontal form-bordered col-md-12">
                            <div class="form-group">
                                <label class="col-md-4 control-label">UserName</label>
                                <div class="col-md-8">
                                    <input class="form-control valid" data-val="true" data-val-length="The username must be less than 256 characters long." data-val-length-max="256" data-val-required="The username field is required." id="newUserName" name="newUserName" type="text" value="" aria-required="true" aria-invalid="false" aria-describedby="Username-error">
                                    <span class="text-danger field-validation-valid" data-valmsg-for="newUserName" data-valmsg-replace="true"></span>
                                </div>
                            </div>                         
                            <div class="form-group">
                                <label class="col-md-4 control-label">Role</label>
                                <div class="col-md-8">
                                    @Dropdown.RenderDropdown(Model.Roles, "newUserRole", @Model.Role, null, true)
                                </div>
                            </div>
                        </div>

                    </div>
                </div>
                <div class="modal-footer">
                        <a href="javascript:;" onclick="ClearNewUserForm();" id="btnNewUserCancel" class="btn btn-sm btn-white" data-dismiss="modal">Cancel</a>
                        <button type="button" onclick="CreateUser();" class="btn btn-sm btn-success" id="btnCreateUser">Create</button>
                </div>
            </form>
        </div>
    </div>
</div>

@*Manage Error*@
@ConfirmationModal.RenderModalError()
@Html.Raw(ViewBag.modalError)

<link href="~/cssbundles/requestsStyles" rel="stylesheet" type="text/css" />
<script src="~/bundles/requestsScripts"></script>

<script>
    var canEdit = @(ManagePermissions.CheckPermission(PermissionAction.EditUser, ViewBag.Role).ToString().ToLower());
    var canDelete = @(ManagePermissions.CheckPermission(PermissionAction.DeleteUser, ViewBag.Role).ToString().ToLower());
    var user = '@(Model.Username)';

    $(document).ready(function () {
        var hideEdit = '';
        if (canEdit === false)
            hideEdit = 'hidden';

        var hideDelete = '';
        if (canDelete === false)
            hideDelete = 'hidden';

        ToggleSideBarMenu($('#Administration'), $('#Users'));

        var dataUrl = '@Html.Raw(Url.Action("GetUsers", "Manage"))';
        var columns = [
            { "mDataProp": "Id", "visible": false },
            { "mDataProp": "UserName", "orderable": true },            
            { "mDataProp": "Role", "orderable": true }];

        if (canEdit !== false && canDelete !== false) {
            columns.push({
                "mDataProp": null,
                "orderable": false,
                "sClass": "detail",
                "sWidth": "8%",
                "mRender": function (data, type, full) {
                    var hideDeleteRow = '';
                    if (data.UserName == user)
                        hideDeleteRow = 'hidden';

                    if (hideDelete == 'hidden')
                        hideDeleteRow = 'hidden';

                    var edit = "<a href='#' onclick='UserDetails(\"" + data.Id + "\")' role='button' class='" + hideEdit + " btn btn-inverse pull-left' data-toggle='modal'><i class='fa fa-pencil' style='font-size:13px'></i></a>";
                    var remove = "<a href='#' onclick='PreDeleteUser(\"" + data.Id + "\")' role='button' class='" + hideDeleteRow + " btn btn-inverse pull-right' data-toggle='modal'><i class='fa fa-remove' style='font-size:13px'></i></a>";
                    return "<div style='width:82px;' class='alignCenter'>" + edit + remove + "</div>"
                }
            });
        }
        else
            $('#userAction').addClass("hidden");

        InitializeDataTable('results-table', dataUrl, columns, [[1, "DESC"]]);

        InitializeViewDetailClickEvent();
        App.init();
    });

    var InitializeViewDetailClickEvent = function () {
        $("tbody .detail").live("click", function (event) {

            event.stopPropagation();
            var tableData = table.row(this.parentElement).data();

            var roleSel = tableData['Role'];
            var dd = $('select[name=UserRole]');

            $(dd).find("option:contains('" + roleSel + "')").prop('selected', true).end().change();
            $(dd).selectpicker('refresh');

        });
    }

    var UserDetails = function (id) {
        ClearValidationErrors("#f_EditUser");
        waitLoading();
        $.ajax({
            url: '@Url.Action("GetUser", "Manage")' + "?id=" + id,
            type: 'GET',
            contentType: 'json',
            success: function (data) {
                var jsonData = JSON.parse(data);

                var attributes = ["Id", "UserName"];
                for (var i = 0; i < attributes.length; i++) {
                    $('#eu_' + attributes[i]).val(jsonData[attributes[i]]);
                }

                stopLoading();
                $('#modal-edit').modal('show');
            },
            error: function (request, textStatus, errorThrown) {
                stopLoading();
                errorHandler(request, textStatus, errorThrown);
            }
        });
    }

    var EditUser = function (id) {
        if (!$("#f_EditUser").valid()) {
            return false;
        }
        waitLoading();
        var formData = $("#f_EditUser").serialize();
        $.ajax({
            url: '@Url.Action("EditUser", "Manage")',
            type: 'POST',
            data: formData,
            success: function () {
                var table = $('#results-table').DataTable()
                table.draw(false);
                stopLoading();
                $('#modal-edit').modal('hide');
            },
            error: function (request, textStatus, errorThrown)
            {
                stopLoading();
                errorHandler(request, textStatus, errorThrown);
                alert('Something went wrong...');
            }
        });
    }

    var PreDeleteUser = function (id) {
        $('#hf_userid').val(id);
        $('#modal-confirmation').modal('show');
    }

    var DeleteUser = function () {
        $.ajax({
            url: '@Url.Action("DeleteUser", "Manage")',
            type: 'POST',
            data: { Id: $('#hf_userid').val() },
            success: function () {
                var table = $('#results-table').DataTable()
                table.draw(false);
                stopLoading();
                $('#modal-confirmation').modal('hide');
            },
            error: function (request, textStatus, errorThrown) {
                stopLoading();
                errorHandler(request, textStatus, errorThrown);
                alert('Something went wrong...');
            }
        });
    }

    var PreNewUser = function (id) {
        waitLoading();
        ClearValidationErrors("#f_NewUser");
        $('#modal-new').modal('show');
        stopLoading();
    }

    var ClearValidationErrors = function (formName) {
        $(formName).find(".field-validation-error").each(function (i, obj) { obj.innerHTML = "" });
    }

    var CreateUser = function () {
        if (!$("#f_NewUser").valid()) {
            return false;
        }
        waitLoading();
        var formData = $("#f_NewUser").serialize();
        $.ajax({
            url: '@Url.Action("Register", "Account")',
            type: 'POST',
            data: formData,
            success: function (data) {
                if (data.Success == true) {
                    ClearNewUserForm();
                    $('#modal-new').modal('hide');
                    var table = $('#results-table').DataTable()
                    table.draw(false);
                }
                else {
                    var errorsList = "";
                    if (data.Errors.length > 0) {
                        errorsList = data.Errors.join('\n');
                    }
                    alert(errorsList);
                }
                stopLoading();
            },
            error: function (request, textStatus, errorThrown)
            {
                stopLoading();
                errorHandler(request, textStatus, errorThrown);
                alert('Something went wrong...');
            }
        });
    }

    var ClearNewUserForm = function () {
        $("#newUserName").val("");        
        $('select[name="newUserRole"]').parent().find("span.filter-option.pull-left")[0].innerText = "Administrator";
        $('select[name="newUserRole"]').parent().find("ul.dropdown-menu.inner > li").removeClass("selected active")
        $('select[name="newUserRole"]').parent().find("ul.dropdown-menu.inner > li")[0].className = "selected active";
    }

</script>

