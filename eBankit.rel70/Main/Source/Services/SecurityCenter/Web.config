<?xml version="1.0" encoding="utf-8"?>
<configuration>
  <configSections>
    <section name="loggingConfiguration" type="Microsoft.Practices.EnterpriseLibrary.Logging.Configuration.LoggingSettings, Microsoft.Practices.EnterpriseLibrary.Logging, Version=5.0.414.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" requirePermission="true" />
    <section name="exceptionHandling" type="Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Configuration.ExceptionHandlingSettings, Microsoft.Practices.EnterpriseLibrary.ExceptionHandling, Version=5.0.414.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" requirePermission="true" />
    <section name="dataConfiguration" type="Microsoft.Practices.EnterpriseLibrary.Data.Configuration.DatabaseSettings, Microsoft.Practices.EnterpriseLibrary.Data, Version=5.0.414.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" requirePermission="true" />
    <section name="AlertsProvider" type="eBankit.LIB.Module.Alerts.Provider.AlertsProviderConfiguration, eBankit.LIB.Module.Alerts" allowDefinition="Everywhere" />
    <sectionGroup name="BCP">
      <sectionGroup name="SDC">
        <section name="sessionState" type="System.Configuration.SingleTagSectionHandler, system, Version=1.0.3300.0, Culture=neutral, PublicKeyToken=b77a5c561934e089, Custom=null" />
      </sectionGroup>
    </sectionGroup>
  </configSections>
  <AlertsProvider defaultProvider="FirstProvider">
    <providers>
      <add name="FirstProvider" type="eBankit.LIB.Module.Alerts.Provider.AlertsServicesProvider, eBankit.LIB.Module.Alerts" description="this came from config" />
    </providers>
  </AlertsProvider>
  <BCP>
    <SDC>
      <sessionState mode="HttpSessionState" />
    </SDC>
  </BCP>
  <!-- ************************************************************************* -->
  <!-- *Entrerprise Libraries Settings                                         * -->
  <!-- ************************************************************************* -->
  <loggingConfiguration name="Logging Application Block" tracingEnabled="true" defaultCategory="info" logWarningsWhenNoCategoriesMatch="true">
    <listeners>
      <add fileName="C:\Logs\SecurityCenter.log" rollSizeKB="15000" timeStampPattern="yyyy-MM-dd" rollFileExistsBehavior="Increment" rollInterval="Week" formatter="Text Formatter" header="" footer="" listenerDataType="Microsoft.Practices.EnterpriseLibrary.Logging.Configuration.RollingFlatFileTraceListenerData, Microsoft.Practices.EnterpriseLibrary.Logging, Version=5.0.414.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" name="Rolling Flat File Trace Listener" />
      <add fileName="C:\Logs\PerfLogs\SecurityCenter.Perf.log" rollSizeKB="5000" timeStampPattern="yyyy-MM-dd" rollFileExistsBehavior="Increment" rollInterval="None" formatter="Performance Text Formatter" header="" footer="" listenerDataType="Microsoft.Practices.EnterpriseLibrary.Logging.Configuration.RollingFlatFileTraceListenerData, Microsoft.Practices.EnterpriseLibrary.Logging, Version=5.0.414.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" traceOutputOptions="None" type="Microsoft.Practices.EnterpriseLibrary.Logging.TraceListeners.RollingFlatFileTraceListener, Microsoft.Practices.EnterpriseLibrary.Logging, Version=5.0.414.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" name="Performance Rolling Flat File Trace Listener" />
      <!--<add databaseInstanceName="Connection String"      writeLogStoredProcName="WriteLog"      addCategoryStoredProcName="AddCategory"      formatter="Text Formatter" listenerDataType="Microsoft.Practices.EnterpriseLibrary.Logging.Database.Configuration.FormattedDatabaseTraceListenerData, Microsoft.Practices.EnterpriseLibrary.Logging.Database, Version=3.1.0.0, Culture=neutral,PublicKeyToken=b03f5f7f11d50a3a" traceOutputOptions="None" type="Microsoft.Practices.EnterpriseLibrary.Logging.Database.FormattedDatabaseTraceListener, Microsoft.Practices.EnterpriseLibrary.Logging.Database, Version=3.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" name="Database Trace Listener" />-->
    </listeners>
    <formatters>
      <add template="====================&#xA;&#xA;{timestamp} - {severity} - {title}&#xA;--------------------&#xA;ActivityId: [{property(ActivityId)}]&#xA;ProcessId: [{processId}]&#xA;ThreadId: [{win32ThreadId}]&#xA;---&#xA;{message}&#xA;---&#xA;{dictionary({key}: {value}&#xA;)}&#xA;" type="Microsoft.Practices.EnterpriseLibrary.Logging.Formatters.TextFormatter, Microsoft.Practices.EnterpriseLibrary.Logging, Version=5.0.414.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" name="Text Formatter" />
      <add template="{message}" type="Microsoft.Practices.EnterpriseLibrary.Logging.Formatters.TextFormatter, Microsoft.Practices.EnterpriseLibrary.Logging, Version=5.0.414.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" name="Performance Text Formatter" />
    </formatters>
    <logFilters>
      <add categoryFilterMode="DenyAllExceptAllowed" type="Microsoft.Practices.EnterpriseLibrary.Logging.Filters.CategoryFilter, Microsoft.Practices.EnterpriseLibrary.Logging, Version=5.0.414.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" name="Category Filter">
        <categoryFilters>
          <add name="Error" />
          <add name="Fatal" />
          <add name="Warn" />
          <add name="Debug" />
          <add name="Info" />
          <add name="SupportInfo" />
          <add name="PerformanceLogging" />
        </categoryFilters>
      </add>
      <add enabled="true" type="Microsoft.Practices.EnterpriseLibrary.Logging.Filters.LogEnabledFilter, Microsoft.Practices.EnterpriseLibrary.Logging, Version=5.0.414.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" name="LogEnabled Filter" />
    </logFilters>
    <categorySources>
      <add switchValue="Verbose" name="Debug">
        <listeners>
          <add name="Rolling Flat File Trace Listener" />
        </listeners>
      </add>
      <add switchValue="Error" name="Error">
        <listeners>
          <add name="Rolling Flat File Trace Listener" />
        </listeners>
      </add>
      <add switchValue="Critical" name="Fatal">
        <listeners>
          <add name="Rolling Flat File Trace Listener" />
        </listeners>
      </add>
      <add switchValue="Information" name="Info">
        <listeners>
          <add name="Rolling Flat File Trace Listener" />
        </listeners>
      </add>
      <add switchValue="Warning" name="Warn">
        <listeners>
          <add name="Rolling Flat File Trace Listener" />
        </listeners>
      </add>
      <add switchValue="Warning" name="SupportInfo">
        <listeners>
          <add name="Rolling Flat File Trace Listener" />
        </listeners>
      </add>
      <add switchValue="Information" name="PerformanceLogging">
        <listeners>
          <add name="Performance Rolling Flat File Trace Listener" />
        </listeners>
      </add>
    </categorySources>
    <specialSources>
      <allEvents switchValue="All" name="All Events" />
      <notProcessed switchValue="All" name="Unprocessed Category" />
      <errors switchValue="All" name="Logging Errors &amp; Warnings" />
    </specialSources>
  </loggingConfiguration>
  <exceptionHandling>
    <exceptionPolicies>
      <add name="Base Service Contact Exception Policy" />
      <add name="Base Service Global Exception Policy" />
      <add name="Base Service Method Invoke Exception Policy" />
      <add name="Base Service SDC Exception Policy" />
      <add name="Base Service Target Invocation Exception Policy" />
    </exceptionPolicies>
  </exceptionHandling>
  <dataConfiguration defaultDatabase="rel70_EbankitSecurityCenter">
    <providerMappings>
      <add databaseType="Microsoft.Practices.EnterpriseLibrary.Data.Sql.SqlDatabase, Microsoft.Practices.EnterpriseLibrary.Data, Version=5.0.414.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" name="System.Data.SqlClient" />
    </providerMappings>
  </dataConfiguration>
  <!-- ************************************************************************* -->
  <!-- * AppSettings                                                           * -->
  <!-- ************************************************************************* -->
  <appSettings>
    <!--server name for identification of web instance and config settings-->
    <add key="ITS.DNA.Settings.Server.Id" value="ITS.DNA.WebServices" />
    <!--<add key="Database.Debug" value="1"/>-->
    <add key="Monitoring.Logging.Enable" value="true" />
    <add key="Monitoring.Fallback.Application.Name" value="SECURITYCENTER" />
    <add key="Trace.Enabled" value="false" />
    <add key="InitialConfigTrace.Enabled" value="false" />
    <add key="CorporationId" value="1" />
    <add key="Trace.Sync" value="false" />
    <add key="LogServicePerformance" value="true" />
    <add key="FEncodingKey" value="~/ebankit.config" />
    <add key="Database.Debug" value="1" />
    <add key="InDevelopment" value="true" />
    <!--Key used if the sms on first Login will increase the Sat-->
    <add key="IncreaseSatOnFirstLogin" value="false" />
    <!-- Is used to generate different ranges (development VS production)-->
    <add key="eBankit.Middleware.Data.SecurityCenter.DataAccess.UserServices.AssemblyType" value="eBankit.Middleware.Data.SecurityCenter.DataAccess.UserServicesPT, eBankit.Middleware.Data.SecurityCenter.DataAccess.DataServices, 1.0.0.0, Culture=neutral" />
    <add key="eBankit.Middleware.Data.SecurityCenter.DataAccess.UserAliasServices.AssemblyType" value="eBankit.Middleware.Data.SecurityCenter.DataAccess.UserAliasServicesPT, eBankit.Middleware.Data.SecurityCenter.DataAccess.DataServices, 1.0.0.0, Culture=neutral" />
    <add key="eBankit.Middleware.Data.SecurityCenter.DataAccess.ApplicationServices.AssemblyType" value="eBankit.Middleware.Data.SecurityCenter.DataAccess.ApplicationServicesPT, eBankit.Middleware.Data.SecurityCenter.DataAccess.DataServices, 1.0.0.0, Culture=neutral" />
    <add key="eBankit.Middleware.Data.SecurityCenter.DataAccess.AccountServices.AssemblyType" value="eBankit.Middleware.Data.SecurityCenter.DataAccess.AccountServicesPT, eBankit.Middleware.Data.SecurityCenter.DataAccess.DataServices, 1.0.0.0, Culture=neutral" />
    <add key="eBankit.Middleware.Data.SecurityCenter.DataAccess.UserContactServices.AssemblyType" value="eBankit.Middleware.Data.SecurityCenter.DataAccess.UserContactServicesPT, eBankit.Middleware.Data.SecurityCenter.DataAccess.DataServices, 1.0.0.0, Culture=neutral" />
    <add key="eBankit.Middleware.Data.SecurityCenter.DataAccess.AuthorizationCache.AssemblyType" value="eBankit.Middleware.Data.SecurityCenter.DataAccess.AuthorizationCachePT, eBankit.Middleware.Data.SecurityCenter.DataAccess.DataServices, 1.0.0.0, Culture=neutral" />
    <add key="eBankit.Middleware.Data.SecurityCenter.DataAccess.Authorization.AssemblyType" value="eBankit.Middleware.Data.SecurityCenter.DataAccess.Authorization.AuthorizationPT, eBankit.Middleware.Data.SecurityCenter.DataAccess.DataServices, 1.0.0.0, Culture=neutral" />
    <add key="eBankit.Middleware.Data.SecurityCenter.DataAccess.MessageServices.AssemblyType" value="eBankit.Middleware.Data.SecurityCenter.DataAccess.MessageServicesPT, eBankit.Middleware.Data.SecurityCenter.DataAccess.DataServices, 1.0.0.0, Culture=neutral" />
    <add key="validateDataTypes" value="false" />
    <add key="SDC.Cache.Sync" value="true" />
    <add key="SDC.Cache.Synchronize" value="false" />
    <add key="SDC.Cache.Checker.Interval" value="10000" />
    <add key="SDC.Cache.RefreshTimeout" value="12000" />
    <!--seconds until cache addins refresh-->
    <add key="SDC.CacheService.Controller" value="CacheController" />
    <add key="SDC.CacheService.Machines.Count" value="0" />
    <add key="SDC.Cache.Addins.Count" value="15" />
    <add key="SDC.Cache.Addin.0.Name" value="eBankit.Middleware.Core.SecurityCenter.Services.ServiceConfigurationLoader" />
    <add key="SDC.Cache.Addin.0.Assembly" value="eBankit.Middleware.Core.SecurityCenter" />
    <add key="SDC.Cache.Addin.1.Name" value="eBankit.Middleware.Business.SecurityCenter.BusinessLogic.BusinessComponents.TransactionCacheAddIn" />
    <add key="SDC.Cache.Addin.1.Assembly" value="eBankit.Middleware.Business.SecurityCenter" />
    <add key="SDC.Cache.Addin.2.Name" value="eBankit.Middleware.Business.SecurityCenter.BusinessLogic.BusinessComponents.TransactionLabelCacheAddIn" />
    <add key="SDC.Cache.Addin.2.Assembly" value="eBankit.Middleware.Business.SecurityCenter" />
    <add key="SDC.Cache.Addin.3.Name" value="eBankit.Middleware.Business.SecurityCenter.BusinessLogic.BusinessComponents.AssociateLabelsToTransactionAddIn" />
    <add key="SDC.Cache.Addin.3.Assembly" value="eBankit.Middleware.Business.SecurityCenter" />
    <add key="SDC.Cache.Addin.4.Name" value="eBankit.Middleware.Data.SecurityCenter.DataAccess.ChannelTransactionsCacheAddIn" />
    <add key="SDC.Cache.Addin.4.Assembly" value="eBankit.Middleware.Business.SecurityCenter" />
    <add key="SDC.Cache.Addin.5.Name" value="eBankit.Middleware.Data.SecurityCenter.DataAccess.ConfiguredTimeUnitsCacheAddIn" />
    <add key="SDC.Cache.Addin.5.Assembly" value="eBankit.Middleware.Business.SecurityCenter" />
    <add key="SDC.Cache.Addin.6.Name" value="eBankit.Middleware.Data.SecurityCenter.DataAccess.GradeWeightCacheAddIn" />
    <add key="SDC.Cache.Addin.6.Assembly" value="eBankit.Middleware.Business.SecurityCenter" />
    <add key="SDC.Cache.Addin.7.Name" value="eBankit.Middleware.Data.SecurityCenter.DataAccess.AuthorizationChannelRelationCacheAddIn" />
    <add key="SDC.Cache.Addin.7.Assembly" value="eBankit.Middleware.Business.SecurityCenter" />
    <!-- refresh cache for this addin-->
    <add key="SDC.Cache.Addin.8.Name" value="eBankit.Middleware.Data.SecurityCenter.DataAccess.CurrencyTableCacheAddIn" />
    <add key="SDC.Cache.Addin.8.Assembly" value="eBankit.Middleware.Business.SecurityCenter" />
    <add key="SDC.Cache.Addin.8.IsRefreshable" value="true" />
    <add key="SDC.Cache.Addin.9.Name" value="eBankit.Middleware.Data.SecurityCenter.DataAccess.AuthorizationDefaultRulesCacheAddIn" />
    <add key="SDC.Cache.Addin.9.Assembly" value="eBankit.Middleware.Business.SecurityCenter" />
    <add key="SDC.Cache.Addin.9.IsRefreshable" value="true" />
    <add key="SDC.Cache.Addin.10.Name" value="eBankit.Middleware.Data.SecurityCenter.DataAccess.ChannelAuthorizationContextBuildModesCacheAddIn" />
    <add key="SDC.Cache.Addin.10.Assembly" value="eBankit.Middleware.Business.SecurityCenter" />
    <add key="SDC.Cache.Addin.11.Name" value="eBankit.Middleware.Core.SecurityCenter.Services.ChannelSessionConfigLoader" />
    <add key="SDC.Cache.Addin.11.Assembly" value="eBankit.Middleware.Core.SecurityCenter" />
    <add key="SDC.Cache.Addin.12.Name" value="eBankit.Middleware.Data.SecurityCenter.DataAccess.ExtendedPropertyFilterSetsCacheAddIn" />
    <add key="SDC.Cache.Addin.12.Assembly" value="eBankit.Middleware.Business.SecurityCenter" />
    <add key="SDC.Cache.Addin.13.Name" value="eBankit.Middleware.Data.SecurityCenter.DataAccess.UserProfileFilterSetsCacheAddIn" />
    <add key="SDC.Cache.Addin.13.Assembly" value="eBankit.Middleware.Business.SecurityCenter" />
    <add key="SDC.Cache.Addin.14.Name" value="eBankit.Middleware.Data.SecurityCenter.DataAccess.MinTrustLevelOverridesCacheAddIn" />
    <add key="SDC.Cache.Addin.14.Assembly" value="eBankit.Middleware.Business.SecurityCenter" />
    <add key="SDC.Cache.Addin.AuthorizationChannelRelation.token" value="1" />
    <add key="SDC.Cache.Addin.ConfiguredTimeUnits.token" value="1-PT" />
    <add key="SDC.Cache.Addin.ProfileWeight.token" value="1" />
    <add key="SDC.Cache.Addin.AuthorizationDefaultRules.token" value="1" />
    <add key="SDC.Cache.Addin.TransactionLabels.token" value="1" />
    <add key="SDC.Cache.Addin.HeuristicDefinitions.token" value="1" />
    <add key="SDC.Cache.Addin.HeuristicDecisionActions.token" value="1" />
    <add key="SDC.Cache.Addin.HeuristicTypes.token" value="1" />
    <add key="SDC.Cache.Addin.HeuristicSuspiciousLevels.token" value="1" />
    <add key="SDC.Cache.Addin.HeuristicActionTypes.token" value="1" />
    <add key="SDC.Cache.Addin.ChannelAuthorizationContextBuildModes.token" value="1" />
    <add key="SDC.Cache.Addin.ExtendedPropertyFilterSets.token" value="1" />
    <add key="SDC.Cache.Addin.UserProfileFilterSets.token" value="1" />
    <add key="SDC.Cache.Addin.MinTrustLevelOverrides.token" value="1" />
    <add key="SDC.Cache.Addin.CurrencyTableCacheAddIn.token" value="1" />
    <!-- ################################################### -->
    <!-- #### SMS  Gateway                              #### -->
    <!-- ################################################### -->
    <!--###########   AWS Configurations ##############-->
    <add key="SMSGateway.UseAws" value="" />
    <add key="SMSGateway.AWS.Unicode" value="" />
    <add key="SMSGateway.AWS.AWSAccessKeyId" value="" />
    <add key="SMSGateway.AWS.AWSSecretAccessKey" value="" />
    <add key="SMSGateway.AWS.ApplicationId" value="" />
    <add key="SMSGateway.AWS.Error.Key" value="" />
    <add key="SMSGateway.AWS.isLocal" value="" />
    <add key="SMSGateway.AWS.AWSServiceURL" value="" />
    <add key="SMSGateway.AWS.SenderID" value="" />
    <add key="SMSGateway.AWS.PrefixExclusion" value="" />
    <!--###############################################-->
    <!--<add key="SMSGateway.URL" value="http://196.216.236.7/http/sendmsg?user=$&amp;password=$&amp;api_id=$&amp;from=$&amp;to=$&amp;unicode=1&amp;concat=5&amp;text=$" />-->
    <add key="SMSGateway.URL" value="http://websimulation.rel70.local/smssimula?user=$&amp;password=$&amp;api_id=$&amp;from=$&amp;to=$&amp;text=$" />
    <!--<add key="SMSGateway.URL" value="" />-->
    <!--<add key="SMSGateway.URLAlternative" value="http://bulksms.vsms.net/eapi/submission/send_sms/2/2.0?username=vmoreira&amp;password=jony8169&amp;message={1}&amp;msisdn={0}" />-->
    <!--<add key="SMSGateway.URLAlternative" value="http://bulksms.vsms.net/eapi/submission/send_sms/2/2.0?username=vmoreira&amp;password=ebankit.2014&amp;message={1}&amp;msisdn={0}" />-->
    <add key="SMSGateway.URLAlternativeV2" value="" />
    <add key="SMSGateway.Unicode" value="false" />
    <add key="SMSGateway.tokenSeparator" value="$" />
    <add key="SMSGateway.User" value="" />
    <add key="SMSGateway.Password" value="" />
    <add key="SMSGateway.APIId" value="" />
    <add key="SMSGateway.From" value="" />
    <add key="SMSGateway.Error.Tokens.Separator" value="," />
    <add key="SMSGateway.Error.Key" value="ERR:" />
    <add key="SMSGateway.Response.MessageIdKey" value="apiMsgId:" />
    <add key="SMSGateway.Response.ChargeKey" value="charge:" />
    <add key="SMSGateway.Response.StatusKey" value="status:" />
    <add key="SMSGateway.Codes.001" value="Mensagem desconhecida" />
    <add key="SMSGateway.Codes.002" value="Mensagem na fila" />
    <add key="SMSGateway.Codes.003" value="Mensagem entregue a operadora" />
    <add key="SMSGateway.Codes.004" value="Mensagem recebida pelo destinatario" />
    <add key="SMSGateway.Codes.005" value="Erro com o conteudo da mensagem" />
    <add key="SMSGateway.Codes.006" value="Mensagem cancelada pelo utilizador" />
    <add key="SMSGateway.Codes.007" value="Erro ao entregar a mensagem ao aparelho do destinatario" />
    <add key="SMSGateway.Codes.008" value="Mensagem recebida pela operadora" />
    <add key="SMSGateway.Codes.009" value="Erro de roteamento ou de rede" />
    <add key="SMSGateway.Codes.010" value="Mensagem expirou" />
    <add key="SMSGateway.Codes.011" value="Mensagem na fila para ser entregue mais tarde" />
    <add key="SMSGateway.Codes.012" value="conta sem créditos. Mensagem não pode ser entregue" />
    <add key="SMSGateway.Codes.014" value="Excedido o limite de envio de mensagens" />
    <!--add key="SMSGateway.ProxyUrl" value="172.16.8.254" /-->
    <!--Configuration Settings keys-->
    <add key="SMSGateway.ProxyUrl" value="" />
    <add key="SMSGateway.ProxyUser" value="" />
    <add key="SMSGateway.ProxyPass" value="" />
    <add key="ConfigurationSettings.ServerId" value="ServerDefault" />
    <!-- ################################################### -->
    <!-- #### REGISTRATION                              #### -->
    <!-- ################################################### -->
    <add key="REGISTRATION.ONLINE.BRANCH" value="1" />
    <!-- [OPTIONAL] Default Alias pending status after online enrollment
    Default: 14 - Not concluded (awaits for backoffice processment)-->
    <!--<add key="Registration.Online.DefaultAliasPendingStatus" value="14"/>-->
    <!-- [OPTIONAL] Default Alias ready status after online enrollment
    Default: 20 - Waiting for activation (awaits for user sms activation token)-->
    <add key="Registration.Online.DefaultAliasReadyStatus" value="1" />
    <!-- [OPTIONAL] Create SMS token credential for authorizations on online Enrollment ("ready to go" only)
    Default: true - create credential-->
    <!--<add key="Registration.Online.CreateSMSCredential" value="true"/>-->
    <!-- [OPTIONAL] Enables contract recovery for online non-multichannel enrollments.
         Use ContractRecovery.AllowedStatus to control witch states are allowed for recovery.
    Default: false -->
    <add key="Registration.Online.EnableContractRecovery" value="true" />
    <!-- [OPTIONAL] List of allowed alias status for contract recovery. Must have Registration.Online.EnableContractRecovery = true
    Usage: "status [,status]"
    Default: 1 (Active), 9 (Redefinition of Password), 11 (Blocked), 20 (Waiting for activation)-->
    <add key="Registration.Online.ContractRecovery.AllowedStatus" value="1, 9, 11, 20" />
    <!-- ################################################### -->
    <!-- #### ALERTS                                    #### -->
    <!-- ################################################### -->
    <add key="SCAlerts.Register.SMS.Credentials.OnBlock" value="true" />
    <add key="SCAlerts.Register.SMS.SecurityQuestions.OnBlock" value="true" />
    <add key="Alerts.Business.Source" value="4" />
    <add key="Alerts.Business.RejectOperation.OperationTypeId" value="13" />
    <!-- ################################################### -->
    <!-- #### Cryptography                              #### -->
    <!-- ################################################### -->
    <!-- [Optional] Encoder used to convert string to bytes
    Default: "UTF8" -->
    <add key="Cryptography.Signatures.Encoding" value="UTF-8" />
    <!-- [OPTIONAL] Defines the Object Identifier (OID) used with the Public Key Cryptosystem One (PKCS-1).
    Default: "1.2.840.113549.1.1.1" (PKCS-1 with RSA)
    Accepts: "1.2.840.113549.1.1.1" -->
    <add key="Cryptography.Signatures.PKCS.OID" value="1.2.840.113549.1.1.1" />
    <!-- [OPTIONAL] Defines the Hash algotithm used with the PKCS validations
    Default: "SHA256" -->
    <add key="Cryptography.Signatures.PKCS.HashAlgorithm" value="SHA256" />
    <!-- ################################################### -->
    <!-- #### Documents                                 #### -->
    <!-- ################################################### -->
    <!-- [Optional] Generate a hash of the document and compare it with all the other hash document - Prevents duplicated documents 
    Default: "false" -->
    <add key="Documents.Validate.Hash" value="true" />
    <!-- [Optional] Defines the Hash algotithm used with the document validation
    Default: "SHA256" -->
    <add key="Documents.Validate.HashAlgorithm" value="SHA256" />
    <!-- [Optional] Document Authorization available on the following channels.
    A comma based list -> Example: "7,13,59"
    Default: "59" -->
    <add key="Documents.Authorization.Channels" value="59" />
    <!-- ################################################### -->
    <!-- #### MUC - Generate Alias Access Code          #### -->
    <!-- ################################################### -->
    <add key="MUC.Contract.Mask" value="000000000" />
    <!-- ################################################### -->
    <!-- #### MUC - Generate Alias Access Code          #### -->
    <!-- ################################################### -->
    <add key="MUC.GenerateAliasAccessCode.SegmentDelta" value="0.5" />
    <!-- L -> left | R -> right-->
    <add key="MUC.GenerateAliasAccessCode.SegmentToSendViaSms" value="L" />
    <add key="MUC.GenerateAliasAccessCode.SegmentToSendViaEmail" value="R" />
    <add key="MUC.GenerateAliasAccessCode.SegmentUseMask" value="true" />
    <add key="MUC.GenerateAliasAccessCode.SegmentMaskChar" value="*" />
    <add key="MUC.GenerateAliasAccessCode.SegmentMaskLength" value="6" />
    <add key="MUC.GenerateAliasAccessCode.DeliverableCredentials" value="1;5" />
    <!-- ##################################################### -->
    <!-- #### Acess Code Generator                        #### -->
    <!-- ##################################################### -->
    <!--The number of characters in the generated password. The length must be between 1 and 128 characters.
        (Compatibility version >= 4.0)
        DEFAULT VALUE: 8 -->
    <add key="ACCESSCODE.GENERATOR.Length" value="7" />
    <!--Access code will be random generated from this set of characters. 
        (Compatibility version >= 4.0)
        DEFAULT VALUE: 0123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNOPQRSTUVWXYZ  -->
    <add key="ACCESSCODE.GENERATOR.AllowedCharacters" value="0123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNOPQRSTUVWXYZ" />
    <!-- ################################################### -->
    <!-- ####           Multi User Contract             #### -->
    <!-- ################################################### -->
    <add key="MultiUserContractSettings.CombinationsGroup.OrderMatters" value="false" />
    <add key="MultiUserContractSettings.CombinationsGroup.WeightMatters" value="false" />
    <add key="MUC.UIContractFormat" value="{0:0000000}" />
    <!-- ################################################### -->
    <!-- ####              USER MIGRATION               #### -->
    <!-- ################################################### -->
    <add key="User.Migration.Alias.Status" value="1" />
    <add key="Adherent.Migration.Alias.Status" value="21" />
    <!-- ################################################### -->
    <!-- ####              SMS TOKEN ID                 #### -->
    <!-- ################################################### -->
    <add key="SMSToken.TokenId.Enabled" value="false" />
    <add key="SMSToken.TokenId.Length" value="2" />
    <add key="SMSToken.TokenId.ReplaceSymbol" value="{tokenId}" />
    <add key="SMSToken.TokenId.Prefix.Enabled" value="true" />
    <add key="SMSToken.TokenId.Prefix.Separator" value=" - " />
    <add key="SMSToken.TokenId.Prefix.ContentTypeId" value="5423" />
    <!-- ################################################### -->
    <!-- ####                 Onboarding                #### -->
    <!-- ################################################### -->
    <!-- [Optional] Default: "OB_" -->
    <add key="Onboarding.PreRegisterUser.CustomerNumber.Prefix" value="OB_" />
    <!-- [Optional] Default: "6" <- Onboarding -->
    <add key="Onboarding.PreRegisterUser.Customer.Source" value="6" />
    <!-- [Optional] Default: "13" PreRegistered -->
    <add key="Onboarding.PreRegisterUser.InternalAlias.Status" value="13" />
    <!-- [Optional] Default: "1" Active -->
    <add key="Onboarding.PreRegisterUser.Alias.Status" value="1" />
    <!-- [Optional] Default: "true" Recovers the alias -->
    <add key="Onboarding.PreRegisterUser.Alias.Rollback.Enabled" value="true" />
    <!-- [Optional] Default: "20" internal alias OnActivation status -->
    <add key="Onboarding.ValidateAlias.OnActivation.Status" value="1" />
    <add key="Onboarding.ValidateAlias.OnWaitingForApproval.Status" value="19" />
    <!-- ################################################### -->
    <!-- ####                 Operation Detail          #### -->
    <!-- ################################################### -->
    <add key="OperationDetail.TransactionWithRelated" value="3023;3024;10" />
    <!-- ################################################### -->
    <!-- ####                Context                    #### -->
    <!-- ################################################### -->
    <add key="eBankit.Context.Procedure.App" value="SC" />
    <!-- ################################################################## -->
    <!-- ####   Recover Password - New Password Exire date (in minutes) ####-->
    <add key="eBankit.ResetPWD.Expire" value="120" />
    <!-- IDENTITY CLAIMS CONFIGURATION -->
    <add key="Identity.Enabled" value="true" />
    <add key="Identity.TokenAuthorityUrl" value="http://ids-internal.rel70.local" />
    <add key="Identity.AllowedIssuers" value="http://ids.rel70.local" />
    <add key="Identity.ClientId" value="SecurityCenter" />
    <add key="Identity.ClientSecret" value="d04cab9d-313a-4134-bd38-2f2def4882f2" />
    <add key="Identity.Scope" value="Scope.Internal Scope.Trusted" />
    <add key="Identity.RequireHTTPS" value="false" />
    <!-- Non-owner can cancel any pending operations if "Cancel.PendingOperations.Enabled" = "false"-->
    <!-- else if "Owner.Cancel.PendingOperations.Enabled" = "true" only the Onwer can cancel any pending operations-->
    <add key="Owner.Cancel.PendingOperations.Enabled" value="false" />
    <!-- ################################################### -->
    <!-- #### OTP Configuration                         #### -->
    <!-- ################################################### -->
    <add key="SecurityCenter.Credentials.OTP.NewDeviceLogin" value="false" />
    <add key="SecurityCenter.Credentials.OTP.PeriodicLogin" value="false" />
    <add key="SecurityCenter.Credentials.OTP.ValidationInterval" value="30" />
    <add key="SecurityCenter.Credentials.OTP.AccessCodeTypeId" value="21" />
    <add key="owin:AutomaticAppStartup" value="false" />
    <!-- ################################################################################ -->
    <!-- #### Limits Configuration													 #### -->
    <!-- #### Descritpion: Configures the operation actions that consumes limits	 #### -->
    <!-- ################################################################################ -->
    <add key="SecurityCenter.Limits.Rules" value="creator-authorizers" />
    <!--<add key="SecurityCenter.Limits.Custom.CustomerConsumptionFlags" value="3" /> 
		<add key="SecurityCenter.Limits.Custom.ContractConsumptionFlags" value="1" />-->
    <!--The configuration key used to retrieve the if the operation authorization detail will be added if in case of exceed the limit.-->
    <add key="SecurityCenter.Limits.Add.Exceeded.Authorization" value="true" />
    <!-- Non-owner can cancel any pending operations if "Cancel.PendingOperations.Enabled" = "false"-->
    <!-- else if "Owner.Cancel.PendingOperations.Enabled" = "true" only the Onwer can cancel any pending operations-->
    <add key="Owner.Cancel.PendingOperations.Enabled" value="false" />
  </appSettings>
  <!-- ************************************************************************* -->
  <!-- * System.web Settings                                                   * -->
  <!-- ************************************************************************* -->
  <system.web>
    <compilation debug="true" targetFramework="4.8" />
    <httpRuntime targetFramework="4.8" />
    <!--
      The <authentication> section enables configuration 
      of the security authentication mode used by 
      ASP.NET to identify an incoming user. 
    -->
    <authentication mode="Windows" />
    <sessionState sessionIDManagerType="eBankit.Common.Session.CoreSessionIDManager" mode="Custom" customProvider="SqlInMemoryProvider">
      <providers>
        <clear />
        <add name="SqlInMemoryProvider" type="Microsoft.Web.SessionState.SqlInMemoryProvider" connectionString="Data Source=EBKNTBOOK-0850\LOCALDB;User ID=sa;Password=Portofc1997_;Initial Catalog=rel70_EbankitSessionStateInMemorySC" />
      </providers>
    </sessionState>
    <!--
       The <customErrors> section enables configuration 
       of what to do if/when an unhandled error occurs 
       during the execution of a request. Specifically, 
       it enables developers to configure html error pages 
       to be displayed in place of a error stack trace.

       <customErrors mode="RemoteOnly" defaultRedirect="GenericErrorPage.htm">
         <error statusCode="403" redirect="NoAccess.htm" />
         <error statusCode="404" redirect="FileNotFound.htm" />
       </customErrors>
    -->
    <pages controlRenderingCompatibilityVersion="3.5" clientIDMode="AutoID" />
    <!--<httpModules>
          <remove name="ITCore.Common.Profiler" />
    </httpModules>-->
    <httpHandlers>
      <remove verb="GET" path="Cache.axd" />
    </httpHandlers>
    <identity impersonate="false" />
  </system.web>
  <connectionStrings>
    <add name="eBankit.Session" connectionString="Data Source=EBKNTBOOK-0850\LOCALDB;Initial Catalog=rel70_EbankitSessionStateInMemorySC;User ID=sa;Password=Portofc1997_" providerName="System.Data.SqlClient" />
  </connectionStrings>
  <runtime>
    <assemblyBinding xmlns="urn:schemas-microsoft-com:asm.v1">
      <dependentAssembly>
        <assemblyIdentity name="Newtonsoft.Json" publicKeyToken="30ad4fe6b2a6aeed" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-13.0.0.0" newVersion="13.0.0.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="CacheManager.Core" publicKeyToken="5b450b4fb65c4cdb" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-1.2.0.0" newVersion="1.2.0.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="System.Buffers" publicKeyToken="cc7b13ffcd2ddd51" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-4.0.3.0" newVersion="4.0.3.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="System.Memory" publicKeyToken="cc7b13ffcd2ddd51" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-4.0.1.1" newVersion="4.0.1.1" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="System.Runtime.CompilerServices.Unsafe" publicKeyToken="b03f5f7f11d50a3a" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-6.0.0.0" newVersion="6.0.0.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="Microsoft.Extensions.Primitives" publicKeyToken="adb9793829ddae60" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-6.0.0.0" newVersion="6.0.0.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="Microsoft.Extensions.Configuration.Abstractions" publicKeyToken="adb9793829ddae60" />
        <bindingRedirect oldVersion="0.0.0.0-6.0.0.0" newVersion="6.0.0.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="System.Numerics.Vectors" publicKeyToken="b03f5f7f11d50a3a" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-4.1.4.0" newVersion="4.1.4.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="Microsoft.Extensions.Configuration" publicKeyToken="adb9793829ddae60" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-6.0.0.0" newVersion="6.0.0.0" />
      </dependentAssembly>
    </assemblyBinding>
  </runtime>
  <system.webServer>
    <modules runAllManagedModulesForAllRequests="true">
      <remove name="WebDAVModule" />
    </modules>
    <handlers>
      <remove name="WebDAV" />
    </handlers>
    <security>
      <requestFiltering>
        <verbs>
          <add verb="PUT" allowed="true" />
          <add verb="DELETE" allowed="true" />
        </verbs>
      </requestFiltering>
    </security>
  </system.webServer>
  <system.serviceModel>
    <services>
      <service name="eBankit.Middleware.SecurityCenterServices.Session.SessionManagement" behaviorConfiguration="AuthorizationServiceBehaviour">
        <endpoint address="" binding="webHttpBinding" contract="eBankit.Middleware.SecurityCenterServices.Session.ISessionManagement" behaviorConfiguration="CustomAttributeBehavior" />
      </service>
      <service name="eBankit.Middleware.SecurityCenterServices.IdentityServer.IdentityServerAuthentication" behaviorConfiguration="AuthorizationServiceBehaviour">
        <endpoint address="" binding="webHttpBinding" contract="eBankit.Middleware.SecurityCenterServices.IdentityServer.IIdentityServerAuthentication" behaviorConfiguration="CustomAttributeBehavior" />
      </service>
      <service name="eBankit.Middleware.SecurityCenterServices.SmsToken.SmsTokenManagement" behaviorConfiguration="AuthorizationServiceBehaviour">
        <endpoint address="" binding="webHttpBinding" contract="eBankit.Middleware.SecurityCenterServices.SmsToken.ISmsTokenManagement" behaviorConfiguration="CustomAttributeBehavior" />
      </service>
      <service name="eBankit.Middleware.SecurityCenterServices.Alias.AliasAuthenticationService" behaviorConfiguration="AuthorizationServiceBehaviour">
        <endpoint address="" binding="webHttpBinding" contract="eBankit.Middleware.SecurityCenterServices.Alias.IAliasAuthenticationService" behaviorConfiguration="CustomJsonAttributeBehavior" name="IAliasAuthenticationService" />
      </service>
    </services>
    <extensions>
      <behaviorExtensions>
        <add name="Validator" type="eBankit.Common.Authorization.CustomBehaviorSection, eBankit.Common.Authorization, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" />
      </behaviorExtensions>
    </extensions>
    <behaviors>
      <endpointBehaviors>
        <behavior name="CustomAttributeBehavior">
          <webHttp helpEnabled="true" defaultBodyStyle="Bare" defaultOutgoingResponseFormat="Json" />
          <Validator />
        </behavior>
        <behavior name="CustomJsonAttributeBehavior">
          <webHttp helpEnabled="true" defaultBodyStyle="Bare" defaultOutgoingResponseFormat="Json" />
          <Validator />
          <newtonsoftJsonBehavior />
        </behavior>
      </endpointBehaviors>
      <serviceBehaviors>
        <behavior name="AuthorizationServiceBehaviour">
          <serviceMetadata httpGetEnabled="true" httpsGetEnabled="true" />
          <serviceDebug includeExceptionDetailInFaults="true" />
          <serviceAuthorization principalPermissionMode="Custom" serviceAuthorizationManagerType="eBankit.Common.Authorization.JWTServiceAuthorization, eBankit.Common.Authorization">
          </serviceAuthorization>
        </behavior>
        <behavior name="">
          <serviceMetadata httpGetEnabled="true" httpsGetEnabled="true" />
          <serviceDebug includeExceptionDetailInFaults="false" />
        </behavior>
      </serviceBehaviors>
    </behaviors>
    <serviceHostingEnvironment aspNetCompatibilityEnabled="true" multipleSiteBindingsEnabled="true" />
  </system.serviceModel>
</configuration>